{"version":3,"sources":["components/note.js","services/notes.js","components/notification.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","put","Notification","message","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","toggleImportanceOf","find","n","changedNote","returnedNote","map","catch","error","setTimeout","Footer","style","color","fontStyle","fontSize","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAEaA,EAAO,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACnBC,EAAQF,EAAKG,UACb,qBAAuB,iBAE7B,OACI,qBAAIC,UAAU,OAAd,UACKJ,EAAKK,QACN,yBAAQC,QAAS,kBAAML,EAAiBD,EAAKO,KAA7C,cAAoDL,EAApD,W,gBCRNM,EAAU,aAiBD,EAfA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACN,EAAIO,GAEhB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBD,GAAMO,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCfhCI,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3B,OAAgB,OAAZA,EACK,KAIP,qBAAKd,UAAU,QAAf,SACGc,KCyFMC,EA5FH,WAEV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,iBAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRC,IAEGnB,MAAK,SAAAoB,GACJT,EAASS,QAEZ,IAEH,IAiBMC,EAAcP,EAChBJ,EACAA,EAAMY,QAAO,SAACjC,GAAD,OAA6B,IAAnBA,EAAKG,aAE1B+B,EAAqB,SAAA3B,GACzB,IAAMP,EAAOqB,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAE7B,KAAOA,KAChC8B,EAAW,2BAAQrC,GAAR,IAAcG,WAAYH,EAAKG,YAEhD2B,EAAmBvB,EAAI8B,GACpB1B,MAAK,SAAA2B,GACJhB,EAASD,EAAMkB,KAAI,SAAAvC,GAAI,OAAIA,EAAKO,KAAOA,EAAKP,EAAOsC,SAEpDE,OAAM,SAAAC,GACLb,EAAgB,SAAD,OAAU5B,EAAKK,QAAf,sCACfqC,YAAW,WAAQd,EAAgB,QAAS,KAC5CN,EAASD,EAAMY,QAAO,SAAAG,GAAC,OAAIA,EAAE7B,KAAOA,UAIpCoC,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GAIN,OACE,gCACE,uCACA,cAAC,EAAD,CAAc7B,QAASS,IACvB,8BACE,yBAAQrB,QAAS,kBAAMoB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,MADhC,cAIF,6BACGO,EAAYO,KAAI,SAAAvC,GAAI,OACnB,cAAC,EAAD,CACEA,KAAMA,EACNC,iBAAkBiC,GAFTlC,EAAKO,SAKpB,uBAAMyC,SAjEM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB9C,QAASkB,EACT6B,MAAM,IAAIC,MAAOC,cACjBnD,UAAWoD,KAAKC,SAAW,IAE7B1B,EAAmBqB,GAChBxC,MAAK,SAAA2B,GACJhB,EAASD,EAAMoC,OAAOnB,IACtBd,EAAW,QAuDb,UACE,uBACEkC,MAAOnC,EACPoC,SArDiB,SAACV,GAAD,OAAWzB,EAAWyB,EAAMW,OAAOF,UAuDtD,wBAAQG,KAAK,SAAb,qBAEF,cAAClB,EAAD,Q,MCtFNmB,IAASC,OAAQ,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.ddf1f21e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Note = ({ note, toggleImportance }) => {\r\n    const label = note.important\r\n        ? 'make not important' : 'make important'\r\n\r\n    return (\r\n        <li className='note'>\r\n            {note.content}\r\n            <button onClick={() => toggleImportance(note.id)}> {label} </button>\r\n        </li>\r\n    )\r\n}\r\n\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update\r\n}","export const Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }","import React, { useState, useEffect } from 'react'\r\nimport { Note } from './components/note'\r\nimport noteService from './services/notes'\r\nimport { Notification } from './components/notification'\r\nconst App = () => {\r\n\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState(\"a new note...\")\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5\r\n    }\r\n    noteService.create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n\r\n  }\r\n\r\n  const handleNoteChange = (event) => setNewNote(event.target.value)\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter((note) => note.important === true)\r\n\r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService.update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(`Note '${note.content}' was already removed from server`)\r\n        setTimeout(() => { setErrorMessage(null) }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  const Footer = () => {\r\n    const footerStyle = {\r\n      color: 'green',\r\n      fontStyle: 'italic',\r\n      fontSize: 16\r\n    }\r\n    return (\r\n      <div style={footerStyle}>\r\n        <br />\r\n        <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n      </div>)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all'} notes\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map(note =>\r\n          <Note key={note.id}\r\n            note={note}\r\n            toggleImportance={toggleImportanceOf} />\r\n        )}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          value={newNote}\r\n          onChange={handleNoteChange}\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render (<App />,  document.getElementById('root'))\n"],"sourceRoot":""}