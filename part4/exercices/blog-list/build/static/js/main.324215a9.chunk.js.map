{"version":3,"sources":["reducers/notificationReducer.js","services/blogs.js","components/BlogForm.js","reducers/blogReducer.js","components/Notification.js","services/login.js","reducers/userReducer.js","components/LoginForm.js","components/Togglable.js","components/BlogList.js","components/Blog.js","services/users.js","components/Users.js","components/User.js","components/NavBar.js","App.js","reducers/usersReducer.js","index.js"],"names":["setNotificationWith","notification","error","type","data","baseUrl","token","getAll","axios","get","then","response","create","blog","a","config","headers","Authorization","post","setToken","newToken","update","id","put","remove","delete","comment","BlogForm","useState","title","setTitle","author","setAuthor","url","setUrl","dispatch","useDispatch","onSubmit","event","preventDefault","blogService","newBlogCreated","Form","Group","Label","Control","value","name","onChange","target","Button","variant","Notification","useSelector","state","Alert","login","credentials","setUserWith","user","LoginForm","username","setUsername","password","setPassword","handleSubmit","loginService","window","localStorage","setItem","JSON","stringify","setTimeout","Togglable","children","showButtonLabel","hideButtonLabel","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisivility","style","onClick","BlogList","sortedBlogs","blogs","sort","first","second","likes","Table","striped","map","key","to","Blog","blogId","useParams","history","useHistory","store","find","href","size","blogWithNewLike","blogUpdated","updateBlog","confirm","push","commentedBlog","commentBlog","Row","Col","FormControl","as","comments","index","Users","users","length","User","userId","NavBar","padding","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","className","Link","NavDropdown","Item","clear","App","useEffect","blogList","userService","loggedUserJSON","getItem","parse","path","reducer","combineReducers","action","filter","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.324215a9.chunk.js","sourcesContent":["export const setNotificationWith = (notification, error) => (\r\n  {\r\n    type: 'SET_NOTIFICATION',\r\n    data: {\r\n      notification,\r\n      error\r\n    }\r\n  }\r\n)\r\n\r\n\r\nexport const clearNotification = () => (\r\n  { type: 'RESET_NOTIFICATION' }\r\n)\r\n\r\nexport const notificationReducer = (state = {}, action) => {\r\n  const { type, data } = action\r\n\r\n  switch(type){\r\n  case 'SET_NOTIFICATION':{\r\n    return {\r\n      notification: data.notification,\r\n      error: data.error\r\n    }\r\n  }\r\n  case 'RESET_NOTIFICATION':{\r\n    return {}\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `Bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async blog => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const response = await axios.post(baseUrl, blog, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, blog) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const response = await axios.put(`${baseUrl}/${id}`, blog, config)\r\n  return response.data\r\n}\r\n\r\nconst remove = async id => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nconst comment = async (id, comment) => {\r\n  const response = await axios.post(`${baseUrl}/${id}/comments`, { comment: comment })\r\n  return response.data\r\n}\r\nexport default {\r\n  getAll,\r\n  create,\r\n  setToken,\r\n  update,\r\n  remove,\r\n  comment\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createNewBlog } from '../reducers/blogReducer'\r\n\r\nexport const BlogForm = () => {\r\n  const [title, setTitle] = useState('')\r\n  const [author, setAuthor] = useState('')\r\n  const [url, setUrl] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault()\r\n    const newBlog= {\r\n      title,\r\n      author,\r\n      url\r\n    }\r\n    dispatch(createNewBlog(newBlog))\r\n    setTitle('')\r\n    setAuthor('')\r\n    setUrl('')\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h2>create new</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <Form.Group>\r\n          <Form.Label>title</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            value={title}\r\n            name='title'\r\n            onChange={({ target }) => setTitle(target.value)}\r\n          />\r\n          <Form.Label>author</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            value={author}\r\n            name='author'\r\n            onChange={({ target }) => setAuthor(target.value)}\r\n          />\r\n          <Form.Label>url</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            value={url}\r\n            name='url'\r\n            onChange={({ target }) => setUrl(target.value)}\r\n          />\r\n          <Button variant=\"primary\" type=\"submit\">create</Button>\r\n        </Form.Group>\r\n      </form>\r\n    </div>\r\n  )}","import blogService from '../services/blogs'\r\n\r\nexport const initializeBlogList = () => {\r\n  return async (dispatch) => {\r\n    const blogList = await blogService.getAll()\r\n    dispatch ({\r\n      type: 'INIT_BLOGS',\r\n      data: blogList\r\n    })\r\n  }\r\n}\r\n\r\nexport const createNewBlog = (blog) => {\r\n  return async (dispatch) => {\r\n    const newBlogCreated = await blogService.create(blog)\r\n    dispatch({\r\n      type: 'NEW_BLOG',\r\n      data: newBlogCreated\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateBlog = ({ id, ...blog }) => {\r\n  return async (dispatch) => {\r\n    const blogUpdated = await blogService.update(id, blog)\r\n    dispatch({\r\n      type: 'UPDATE_BLOG',\r\n      data: { ...blogUpdated, user: blog['user'] }\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteBlog = (id) => {\r\n  return async (dispatch) => {\r\n    await blogService.remove(id)\r\n    dispatch({\r\n      type: 'DELETE_BLOG',\r\n      data: { id }\r\n    })\r\n  }\r\n}\r\n\r\nexport const commentBlog = (blog, comment) => {\r\n  return async (dispatch) => {\r\n    const commentedBlog = await blogService.comment(blog.id, comment)\r\n\r\n    dispatch({\r\n      type: 'UPDATE_BLOG',\r\n      data: { ...commentedBlog, user: blog['user']  }\r\n    })\r\n  }\r\n}\r\n\r\nexport const blogReducer = (state=[], { type, data }) => {\r\n  switch (type) {\r\n  case 'INIT_BLOGS': {\r\n    return data\r\n  }\r\n  case 'NEW_BLOG': {\r\n    return [...state, data]\r\n  }\r\n  case 'UPDATE_BLOG': {\r\n    return state.map(\r\n      blog => blog.id === data.id\r\n        ? data\r\n        : blog\r\n    )\r\n  }\r\n  case 'DELETE_BLOG': {\r\n    return state.filter(blog => blog.id !== data.id)\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const Notification = () => {\r\n  const { notification, error } = useSelector(state => state.notification)\r\n\r\n  const variant = error\r\n    ? 'danger'\r\n    : 'success'\r\n\r\n  return !notification\r\n    ? null\r\n    : (\r\n      <Alert variant={variant}>\r\n        {notification}\r\n      </Alert>)\r\n}","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","export const setUserWith = (user) => {\r\n  return {\r\n    type: 'SET_USER',\r\n    data: { user }\r\n  }\r\n}\r\n\r\nexport const removeUser = () => {\r\n  return {\r\n    type: 'REMOVE_USER',\r\n  }\r\n}\r\n\r\nexport const userReducer = (state=null, { type, data }) => {\r\n  switch (type) {\r\n  case 'SET_USER': {\r\n    return data.user\r\n  }\r\n  case 'REMOVE_USER': {\r\n    return null\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}","import React, { useState } from 'react'\r\nimport loginService from '../services/login'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setNotificationWith, clearNotification } from '../reducers/notificationReducer'\r\nimport { setUserWith } from '../reducers/userReducer'\r\nimport blogService from '../services/blogs'\r\nimport { Button, Form } from 'react-bootstrap'\r\n\r\nexport const LoginForm = () => {\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault()\r\n    try{\r\n      const user = await loginService.login({\r\n        username, password\r\n      })\r\n      window.localStorage.setItem(\r\n        'loggedBlogAppUser', JSON.stringify(user)\r\n      )\r\n      setUsername('')\r\n      setPassword('')\r\n      dispatch(setUserWith(user))\r\n      blogService.setToken(user.token)\r\n\r\n      dispatch(setNotificationWith(`${user.name} logged in successfully`, false))\r\n      setTimeout(() => {\r\n        dispatch(clearNotification())\r\n      }, 3000)\r\n    }catch (exception) {\r\n      dispatch(setNotificationWith('wrong credentials', true))\r\n      setTimeout(() => {\r\n        dispatch(clearNotification())\r\n      }, 3000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Form.Group>\r\n        <Form.Label>username</Form.Label>\r\n        <Form.Control\r\n          type='text'\r\n          value={username}\r\n          name='Username'\r\n          onChange={event => setUsername(event.target.value)}\r\n        />\r\n\r\n        <Form.Label>password</Form.Label>\r\n        <Form.Control\r\n          type='password'\r\n          value={password}\r\n          name='Password'\r\n          onChange={event => setPassword(event.target.value)}\r\n        />\r\n        <Button variant='primary' type=\"submit\">login</Button>\r\n      </Form.Group>\r\n    </form>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nexport const Togglable = ({ children, showButtonLabel, hideButtonLabel }) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none': '' }\r\n  const showWhenVisible = { display: visible ? '': 'none' }\r\n\r\n  const toggleVisivility = () => setVisible(!visible)\r\n\r\n  const showHideButton = () => {\r\n    return hideButtonLabel === 'cancel'\r\n      ? <Button variant='secondary' onClick={toggleVisivility}>{hideButtonLabel}</Button>\r\n      : <button onClick={toggleVisivility}>{hideButtonLabel}</button>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <Button onClick={toggleVisivility}>{showButtonLabel}</Button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {children}\r\n        {showHideButton()}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Table } from 'react-bootstrap'\r\n\r\nexport const BlogList = () => {\r\n  const blogs = useSelector(state => state.blogs)\r\n  const sortedBlogs = blogs.sort((first, second) => second.likes - first.likes)\r\n\r\n  return(\r\n    <div>\r\n      <Table striped>\r\n        <tbody>\r\n          {sortedBlogs.map(blog =>\r\n            <tr key={blog.id}>\r\n              <td>\r\n                <Link to={`/blogs/${blog.id}`}>\r\n                  {blog.title}\r\n                </Link>\r\n              </td>\r\n              <td>\r\n                {blog.author}\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  )}","import React from 'react'\r\nimport { Button, Form, FormControl, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { commentBlog, deleteBlog, updateBlog } from '../reducers/blogReducer'\r\n\r\nconst Blog = () => {\r\n  const blogId = useParams().blogId\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n  const blog = useSelector(store => store.blogs.find(\r\n    blog => blog.id === blogId\r\n  ))\r\n\r\n  const user = useSelector(store => store.user)\r\n\r\n  if (!blog)\r\n    return null\r\n\r\n  const handleLike = () => {\r\n    const blogWithNewLike = { ...blog, likes: blog['likes']+1 }\r\n    dispatch(updateBlog(blogWithNewLike))\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    const confirm = window.confirm(`Remove blog ${blog.title}`)\r\n\r\n    if (!confirm) return\r\n    dispatch(deleteBlog(blog.id))\r\n    history.push('/blogs')\r\n  }\r\n\r\n  const handleComment = (event) => {\r\n    event.preventDefault()\r\n    const comment = event.target.comment.value\r\n    dispatch(commentBlog(blog, comment))\r\n    event.target.comment.value = ''\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h2>{blog.title} {blog.author}</h2>\r\n      <a href={blog.url}>{blog.url}</a>\r\n      <div>likes {blog.likes} <Button size='sm' onClick={handleLike}>like</Button></div>\r\n      <div>added by {blog.user.username}</div>\r\n      {user.username === blog.user.username\r\n        ? <Button variant='danger' size='sm' onClick={handleDelete}>delete</Button>\r\n        : null\r\n      }\r\n      <h3>Comments</h3>\r\n      <Form onSubmit={handleComment}>\r\n        <Form.Group>\r\n          <Row>\r\n            <Col>\r\n              <FormControl as='textarea'\r\n                type=''\r\n                name='comment'\r\n                size='sm'\r\n              />\r\n            </Col>\r\n            <Col><Button type='submit'>add comment</Button></Col>\r\n          </Row>\r\n        </Form.Group>\r\n      </Form>\r\n      <ul>\r\n        {blog.comments && blog.comments.map((comment, index) =>\r\n          <li key={index}>{comment}</li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/users'\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll }","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Users =  () => {\r\n  const users = useSelector(state => state.users)\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th />\r\n          <th>blogs created</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {users.map(user =>\r\n          <tr key={user.id}>\r\n            <td>\r\n              <Link to={`/users/${user.id}`}>\r\n                {user.username}\r\n              </Link> </td>\r\n            <td>{user.blogs.length}</td>\r\n\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n\r\n  )\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams, Link } from 'react-router-dom'\r\n\r\nexport const User = () => {\r\n  const id = useParams().userId\r\n  const user = useSelector(state =>\r\n    state.users.find(\r\n      user => user.id === id))\r\n\r\n  if (!user){\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>{user.username}</h2>\r\n      <h3>added blogs</h3>\r\n      <ul>\r\n        {user.blogs.map(blog =>\r\n          <li key={blog.id}>\r\n            <Link  to={`/blogs/${blog.id}`}>{blog.title}</Link>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { removeUser } from '../reducers/userReducer'\r\n\r\nexport const NavBar = () => {\r\n  const dispatch = useDispatch()\r\n  const user = useSelector(store => store.user)\r\n\r\n  const handleLogout = (event) => {\r\n    event.preventDefault()\r\n    window.localStorage.clear('loggedBlogAppUser')\r\n    dispatch(removeUser())\r\n  }\r\n\r\n  const padding = {\r\n    padding: '5px'\r\n  }\r\n\r\n  return(\r\n    <Navbar collapseOnSelect expand=\"lg\" bg='light' >\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#\" as=\"span\">\r\n            <Link style={padding} to='/blogs'>blogs</Link>\r\n          </Nav.Link>\r\n          <Nav.Link href=\"#\" as=\"span\">\r\n            <Link style={padding} to='/users'>users</Link>\r\n          </Nav.Link>\r\n          <NavDropdown id=\"dropdown-nav-user\" title={`${user.username} logged in`}  >\r\n            <NavDropdown.Item href=\"/login\" onClick={handleLogout}>\r\n              logout\r\n            </NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { BlogForm } from './components/BlogForm'\r\nimport { Notification } from './components/Notification'\r\nimport { LoginForm } from './components/LoginForm'\r\nimport { Togglable } from './components/Togglable'\r\nimport blogService from './services/blogs'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BlogList } from './components/BlogList'\r\nimport Blog from './components/Blog'\r\nimport { initializeBlogList } from './reducers/blogReducer'\r\nimport { initializeUsers } from './reducers/usersReducer'\r\nimport { removeUser, setUserWith } from './reducers/userReducer'\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'\r\nimport { Users } from './components/Users'\r\nimport { User } from './components/User'\r\nimport { NavBar } from './components/NavBar'\r\n\r\n\r\nconst App = () => {\r\n\r\n  const user = useSelector(state => state.user)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeBlogList())\r\n    dispatch(initializeUsers())\r\n\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogAppUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      dispatch(setUserWith(user))\r\n      blogService.setToken(user.token)\r\n    }\r\n\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Notification />\r\n      <Router>\r\n        {user === null\r\n          ? <LoginForm />\r\n          : <div>\r\n            <NavBar />\r\n            <h2>blogs app</h2>\r\n            <Switch>\r\n              <Route path='/users/:userId'>\r\n                <User />\r\n              </Route>\r\n              <Route path='/users'>\r\n                <h2>Users</h2>\r\n                <Users />\r\n              </Route>\r\n              <Route path='/blogs/:blogId'>\r\n                <Blog />\r\n              </Route>\r\n              <Route path='/'>\r\n                <Togglable showButtonLabel='create new blog' hideButtonLabel='cancel'>\r\n                  <BlogForm />\r\n                </Togglable>\r\n                <BlogList user={user}/>\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        }\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import userService from '../services/users'\r\n\r\nexport const initializeUsers = () => {\r\n  return async (dispatch) => {\r\n    const users = await userService.getAll()\r\n    dispatch({\r\n      type: 'INIT_USERS',\r\n      data: { users }\r\n    })\r\n  }\r\n}\r\n\r\nexport const usersReducer = (state=[], { type, data }) => {\r\n  switch (type) {\r\n  case 'INIT_USERS': {\r\n    return data.users\r\n  }\r\n  default:\r\n    return state\r\n  }\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { Provider } from 'react-redux'\r\nimport { notificationReducer } from './reducers/notificationReducer'\r\nimport { blogReducer } from './reducers/blogReducer'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { userReducer } from './reducers/userReducer'\r\nimport { usersReducer } from './reducers/usersReducer'\r\n\r\nconst reducer = combineReducers({\r\n  notification: notificationReducer,\r\n  blogs: blogReducer,\r\n  user: userReducer,\r\n  users: usersReducer\r\n})\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n  , document.getElementById('root'))"],"sourceRoot":""}